<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configuration on Documentation of php-simple-kafka-client</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/</link><description>Recent content in Configuration on Documentation of php-simple-kafka-client</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 27 Dec 2020 22:09:37 +0100</lastBuildDate><atom:link href="https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/index.xml" rel="self" type="application/rss+xml"/><item><title>setOAuthBearerTokenRefreshCb</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setOAuthBearerTokenRefreshCb/</link><pubDate>Tue, 07 Sep 2021 10:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setOAuthBearerTokenRefreshCb/</guid><description>Description public function setOAuthBearerTokenRefreshCb(callable $callback): void {} The SASL/OAUTHBEARER token refresh callback is triggered automatically or via poll
whenever OAUTHBEARER is the SASL mechanism and a token needs to be retrieved,
typically based on the configuration defined in sasl.oauthbearer.config.
The callback should invoke setOauthBearerToken
or setOauthBearerTokenFailure to indicate success
or failure, respectively.
Example $conf = new SimpleKafkaClient\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, getenv(&amp;#39;TEST_KAFKA_BROKERS&amp;#39;)); $conf-&amp;gt;set(&amp;#39;security.protocol&amp;#39;, &amp;#39;SASL_PLAINTEXT&amp;#39;); $conf-&amp;gt;set(&amp;#39;sasl.mechanisms&amp;#39;, &amp;#39;OAUTHBEARER&amp;#39;); $conf-&amp;gt;set(&amp;#39;sasl.oauthbearer.config&amp;#39;, &amp;#39;principalClaimName=azp&amp;#39;); $conf-&amp;gt;setOAuthBearerTokenRefreshCb(function($kafka, $oAuthBearerConfig) { // get the refresh token with some custom code, then act accordingly if ($tokenRefreshWasSucessful) { $kafka-&amp;gt;setOAuthBearerToken($token, $lifetimeMs, $principalName, $extensions); } else { $kafka-&amp;gt;setOAuthBearerTokenFailure($errorReason); } });</description></item><item><title>dump</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/dump/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/dump/</guid><description>Description public function dump(): array {} Dumps the current configuration
Example $conf = new SimpleKafkaClient\Configuration(); $conf-&amp;gt;set(&amp;#39;auto.offset.reset&amp;#39;, &amp;#39;earliest&amp;#39;); $conf-&amp;gt;dump();</description></item><item><title>set</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/set/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/set/</guid><description>Description public function set(string $name, string $value): void {} Set a configuration value
Example $conf = new SimpleKafkaClient\Configuration(); $conf-&amp;gt;set(&amp;#39;auto.offset.reset&amp;#39;, &amp;#39;earliest&amp;#39;);</description></item><item><title>setDrMsgCb</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setDrMsgCb/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setDrMsgCb/</guid><description>Description public function setDrMsgCb(callable $callback): void {} Set a message delivery report callback
This callback is called exactly once per message, indicating if
the message was succesfully delivered or permanently failed delivery
Example $conf = new SimpleKafkaClient\Configuration(); $conf-&amp;gt;setDrMsgCb( function (Producer $kafka, Message $message) { if (RD_KAFKA_RESP_ERR_NO_ERROR !== $message-&amp;gt;err) { $errorStr = rd_kafka_err2str($message-&amp;gt;err); echo sprintf(&amp;#39;Message FAILED (%s, %s) to send with payload =&amp;gt; %s&amp;#39;, $message-&amp;gt;err, $errorStr, $message-&amp;gt;payload) . PHP_EOL; } else { // message successfully delivered echo sprintf(&amp;#39;Message sent SUCCESSFULLY with payload =&amp;gt; %s&amp;#39;, $message-&amp;gt;payload) .</description></item><item><title>setErrorCb</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setErrorCb/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setErrorCb/</guid><description>Description public function setErrorCb(callable $callback): void {} Gets triggered for every error that occurs in librdkafka, keep in mind
that non-critical errors will be retried by libdrkafka
Example $conf = new SimpleKafkaClient\Configuration(); $conf-&amp;gt;setErrorCb( function (SimpleKafkaClient\Kafka $kafka, $errorCode, $reason) { //do something } );</description></item><item><title>setLogCb</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setLogCb/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setLogCb/</guid><description>Description public function setLogCb(callable $callback): void {} Set a log callback
You will get events according to the log_level setting
Example $conf = new SimpleKafkaClient\Configuration(); $conf-&amp;gt;setLogCb( function (SimpleKafkaClient\Kafka $kafka, int $level, string $facility, string $message) { //do something } );</description></item><item><title>setOffsetCommitCb</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setOffsetCommitCb/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setOffsetCommitCb/</guid><description>Description public function setOffsetCommitCb(callable $callback): void {} Set offset commit callback for use with consumer groups.
The results of automatic or manual offset commits will be scheduled
for this callback. If no partitions had valid offsets to commit
this callback will be called with err == RD_KAFKA_RESP_ERR__NO_OFFSET
which is not to be considered an error.
Example $conf = new SimpleKafkaClient\Configuration(); $conf-&amp;gt;setOffsetCommitCb( function (SimpleKafkaClient\Kafka $kafka, int $errorCode, array $topicPartition) { if (RD_KAFKA_RESP_ERR_NO_ERROR === $errorCode) { echo &amp;#39;Commit was successful&amp;#39;; } else { echo &amp;#39;Commit failed&amp;#39;; } } );</description></item><item><title>setRebalanceCb</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setRebalanceCb/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setRebalanceCb/</guid><description>Description public function setRebalanceCb(callable $callback): void {} Set a rebalance callback for use with coordinated consumer group balancing.
The $errorCode is set to either RD_KAFKA_RESP_ERR__ASSIGN_PARTITIONS
or RD_KAFKA_RESP_ERR__REVOKE_PARTITIONS and &amp;lsquo;partitions&amp;rsquo; contains
the full partition set that was either assigned or revoked.
Registering a rebalance callback turns off the automatic partition
assignment/revocation and instead delegates that responsibility
to the application&amp;rsquo;s callback.
Example $conf = new SimpleKafkaClient\Configuration(); $conf-&amp;gt;setRebalanceCb( function (SimpleKafkaClient\Consumer $kafka, int $errorCode, array $partitions = null) { case RD_KAFKA_RESP_ERR__ASSIGN_PARTITIONS: $kafka-&amp;gt;assign($partitions); break; case RD_KAFKA_RESP_ERR__REVOKE_PARTITIONS: if ($manual_commits) { // Optional explicit manual commit $kafka-&amp;gt;commit($partitions); } //revoke partitions $kafka-&amp;gt;assign(NULL); break; default: // handle arbitrary rebalancing failure .</description></item><item><title>setStatsCb</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setStatsCb/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/configuration/setStatsCb/</guid><description>Description public function setStatsCb(callable $callback): void {} Set a statistics callback
The statistics callback is triggered every statistics.interval.ms (needs to be configured separately).
Example $conf = new SimpleKafkaClient\Configuration(); $conf-&amp;gt;setStatsCb( function (SimpleKafkaClient\Kafka $kafka, string $json, int $jsonLength) { //do something } );</description></item></channel></rss>