<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Consumer on Documentation of php-simple-kafka-client</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/</link><description>Recent content in Consumer on Documentation of php-simple-kafka-client</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 27 Dec 2020 22:09:37 +0100</lastBuildDate><atom:link href="https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/index.xml" rel="self" type="application/rss+xml"/><item><title>__construct</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/__construct/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/__construct/</guid><description>Description public function __construct(Configuration $configuration) {} Get a consumer instance
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf);</description></item><item><title>assign</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/assign/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/assign/</guid><description>Description public function assign(array $topics): void {} Atomic assignment of partitions to consume.
The new partitions will replace the existing assignment.
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $consumer-&amp;gt;assign( [ new Kafka\TopicPartition(&amp;#39;test-topic&amp;#39;, 1, 3000), new Kafka\TopicPartition(&amp;#39;test-topic&amp;#39;, 2, 3009) ] );</description></item><item><title>close</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/close/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/close/</guid><description>Description public function close(): void {} Close down the Consumer. This call will block until
the consumer has revoked its assignment, calling the rebalance callback
if it is configured, committed offsets to broker, and left the consumer group. The maximum blocking time is roughly limited to session.timeout.ms.
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $consumer-&amp;gt;close();</description></item><item><title>commit</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/commit/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/commit/</guid><description>Description /** * @throws Kafka\Exception */ public function commit($messageOrOffsets): void {} Commit offsets synchronously, block until offsets are
committed or the commit fails and an exception is thrown.
Parameter details If null is passed, latest offsets for the current assignment will be committed Ìf a Kafka\Message is passed, commit offset for a single topic+partition based on the message If an array of Kafka\TopicPartition is passed, commit offsets for the provided list of partitions Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.</description></item><item><title>commitAsync</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/commitAsync/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/commitAsync/</guid><description>Description public function commitAsync($messageOrOffsets): void {} Commit offsets asynchronously
Parameter details If null is passed, latest offsets for the current assignment will be committed Ìf a Kafka\Message is passed, commit offset for a single topic+partition based on the message If an array of Kafka\TopicPartition is passed, commit offsets for the provided list of partitions Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $message = $consumer-&amp;gt;consume(20000); if (RD_KAFKA_RESP_ERR_NO_ERROR !</description></item><item><title>consume</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/consume/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/consume/</guid><description>Description public function consume(int $timeoutMs): Message {} Consume message(s) (will also get error events and triggers callbacks)
Registered callbacks will be automaically called rebalanceCallback, logCallback, etc.
On error $message-&amp;gt;err will not be RD_KAFKA_ERR_NO_ERROR but contain the acutal error code.
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $message = $consumer-&amp;gt;consume(20000); An application should call consume() at regular intervals, even if no messages
are expected, to serve any queued callbacks waiting to be called.</description></item><item><title>getAssignment</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getAssignment/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getAssignment/</guid><description>Description public function getAssignment(): array {} Returns the current partition assignment
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $consumer-&amp;gt;assign( [ new Kafka\TopicPartition(&amp;#39;test-topic&amp;#39;, 1, 3000), new Kafka\TopicPartition(&amp;#39;test-topic&amp;#39;, 2, 3009) ] ); var_dump($consumer-&amp;gt;getAssignment());</description></item><item><title>getCommittedOffsets</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getCommittedOffsets/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getCommittedOffsets/</guid><description>Description public function getCommittedOffsets(array $topics, int $timeoutMs): array {} Returns the committed offsets for topics and partitions for a consumer group
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $topicPartition = new TopicPartition(&amp;#39;test-topic&amp;#39;, 0); var_dump($consumer-&amp;gt;getCommittedOffsets([$topicPartition], 10000));</description></item><item><title>getMetadata</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getMetadata/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getMetadata/</guid><description>Description function getMetadata(bool $allTopics, int $timeoutMs, ConsumerTopic $topic = null): Metadata {} Get metadata for all topics or a single topic
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $topicHandle = $consumer-&amp;gt;getTopicHandle(&amp;#39;test-topic&amp;#39;); $singleTopicMetadata = $consumer-&amp;gt;metadata(true, $topicHandle, 10000);</description></item><item><title>getOffsetPositions</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getOffsetPositions/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getOffsetPositions/</guid><description>Description public function getOffsetPositions(array $topics): array {} The offset field of each requested partition will be set to the offset of the last consumed message + 1
If there was no previous message RD_KAFKA_OFFSET_INVALID will be returned
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $topicPartition = new TopicPartition(&amp;#39;test-topic&amp;#39;, 0); $topicPartitionsWithOffsets = $consumer-&amp;gt;getOffsetPositions([$topicPartition]));</description></item><item><title>getSubscription</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getSubscription/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getSubscription/</guid><description>Description public function getSubscription(): array {} Return topic names to which the consumer is currently subscribed to
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $consumer-&amp;gt;subscribe([&amp;#39;test-topic&amp;#39;]); var_dump($consumer-&amp;gt;getSubscription());</description></item><item><title>getTopicHandle</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getTopicHandle/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/getTopicHandle/</guid><description>Description public function getTopicHandle(string $topic): ConsumerTopic {} Get a topic handle for a given topic name. A topic handle is needed
for example to query metadata from the broker
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $topicHandle = $consumer-&amp;gt;getTopicHandle(&amp;#39;test-topic&amp;#39;); // use the topic handle for further calls, e.g. to query metadata $singleTopicMetadata = $consumer-&amp;gt;metadata(true, $topicHandle, 10000);</description></item><item><title>offsetsForTimes</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/offsetForTimes/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/offsetForTimes/</guid><description>Description public function offsetsForTimes(array $topicPartitions, int $timeoutMs): array {} Look up the offsets for the given partitions by timestamp.
The returned offset for each partition is the earliest offset whose
timestamp is greater than or equal to the given timestamp in the
corresponding partition.
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $topicPartition = new TopicPartition(&amp;#39;test-topic&amp;#39;, 0, strtotime(&amp;#34;-1 week&amp;#34;)); $offsetsOneWeekAgo = $consumer-&amp;gt;offsetForTimes([$topicPartition], 10000);</description></item><item><title>queryWatermarkOffsets</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/queryWatermarkOffsets/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/queryWatermarkOffsets/</guid><description>Description public function queryWatermarkOffsets(string $topic, int $partition, int &amp;amp;$low, int &amp;amp;$high, int $timeoutMs): void {} Query broker for low (oldest) and high (newest) offsets for a partition
Example $low = 0; $high = 0; $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $topicPartition = new TopicPartition(&amp;#39;test-topic&amp;#39;, 0, strtotime(&amp;#34;-1 week&amp;#34;)); $consumer-&amp;gt;queryWatermarkOffsets(&amp;#39;test-topic&amp;#39;, 0, int &amp;amp;$low, int &amp;amp;$high, 10000);</description></item><item><title>subscribe</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/subscribe/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/subscribe/</guid><description>Description public function subscribe(array $topics): void {} Subscribe to one or more topics (regexp also supported).
Any previous subscription will be unassigned and unsubscribed first.
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $consumer-&amp;gt;subscribe([&amp;#39;test-topic&amp;#39;]);</description></item><item><title>unsubscribe</title><link>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/unsubscribe/</link><pubDate>Sun, 27 Dec 2020 22:09:37 +0100</pubDate><guid>https://php-kafka.github.io/php-simple-kafka-client.github.io/consumer/unsubscribe/</guid><description>Description public function unsubscribe(): void {} Unsubscribe from the current subscriptions
Example $conf = Kafka\Configuration(); $conf-&amp;gt;set(&amp;#39;metadata.broker.list&amp;#39;, &amp;#39;kafka:9092&amp;#39;); $consumer = new Kafka\Consumer($conf); $consumer-&amp;gt;subscribe([&amp;#39;test-topic&amp;#39;]); $consumer-&amp;gt;unsubscribe();</description></item></channel></rss>